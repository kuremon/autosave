{
    "contents" : "is.valid.ggplot=function(g){\n  if(!is.ggplot(g))return(FALSE);\n  has_layers=length(g$layers)>0;\n  return(has_layers);\n}\n\n# deal with identical name/pre existing plots...\n#' @title Save automatically a ggplot object\n#' @description \n#' This is function saves the ggplot given the name of the plot. \n#' By default, the filename is based on the variable name (see Details).\n#' @param obj.ref variable name of the ggplot object.\n#' @param name the name from which the final filename will be constructed. By default \\code{name=obj.ref}.\n#' @param envir the environment in which the ggplot should be looked for.\n#' @param format a character string giving the format of the final saved plot.\n#' @param folder the folder where the result will be saved.\n#' @param info to able/disable message (useful when using \\code{save_all.ggobject})\n#' @param before.name a character string added before \\code{name} when creating the file name.\n#' @param after.name a character string added after \\code{name} when creating the file name.\n#' @param ... additional arguments used in \\code{\\link{ggsave}}.\n#' @details\n#' By default all the dots \\code{\".\"} within the name of the variable are transformed to underscore \\code{\".\"}. For example\n#' if \\code{gg.plot} is a ggplot object, \\code{save_ggobject} will construct the filename from \\code{\"gg_plot\"}.\n#' @seealso \\code{\\link{ggsave}}, \\code{\\link{save_all.ggobject}}\nsave_ggobject=function(obj.ref,name=obj.ref,envir=parent.frame(),format=\"png\",folder=\".\",info=T,\n                       before.name=NULL,after.name=NULL,...){\n  plot=get(obj.ref,envir);\n  name=paste(paste0(before.name,gsub(\"\\\\.\",\"_\",name),after.name),format,sep=\".\");\n  args=c(list(plot=plot,filename=file.path(folder,name)),list(...));\n  do.call(\"ggsave\",args);\n  if(info) message(name,\" is saved in folder \",file_path_as_absolute(folder));\n}\n\n# add folder functionality... Allow for different environment ~...\n#' @title Save automatically all ggplot objects in the local environment\n#' @param folder the folder where the results will be saved.\n#' @param format a character string giving the format of the final saved plots.\n#' @param ... additional arguments to pass on to \\code{\\link{save_ggobject}}.\n#' @return 1 if no error.\n#' @seealso \\code{\\link{ggsave}}, \\code{\\link{save_ggobject}}\nsave_all.ggobject=function(folder=\".\",format=\"png\",...){\n  pf=parent.frame();\n  all.objects=ls(envir=pf);\n  gg.objects.index=NULL;\n  for(object in all.objects){\n    gg.objects.index=c(gg.objects.index,test_valid.ggplot(get(object,envir=parent.frame())));\n  }\n  gg.objects=all.objects[gg.objects.index];\n  Vectorize(save_ggobject,\"obj.ref\")(obj.ref=gg.objects,envir=pf,format=format,folder=folder,...);\n  return(1);\n}",
    "created" : 1380064525715.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2487548450",
    "id" : "18284941",
    "lastKnownWriteTime" : 1380064071,
    "path" : "~/R&D/R packages/Source packages/autosave/R/Archives/save_ggobject.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}